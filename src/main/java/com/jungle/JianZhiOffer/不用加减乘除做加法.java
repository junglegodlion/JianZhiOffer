package com.jungle.JianZhiOffer;

/**
 * 同样考虑5+7，注：5=101，7=111，
 *
 * 1.先不考虑进位值，101^111=010
 * 2.计算进位值，101&111=101，需要再左移一位，得到1010
 * 3.重复1，2
 *      1.先不考虑进位值,0010^1010=1000
 *      2.计算进位值，0010&1010=0010，再左移一位，得到00100
 *      3.重复1，2
 *          1.先不考虑进位值,01000^00100=01100
 *          2.计算进位值，01000&00100=0，左移之后还是0
 *          3.因为进位值为0，所以计算可以终止，最终结果为01100，即12
 *

 */
public class 不用加减乘除做加法 {
    public int Add(int num1,int num2) {
        int sum = 0;
        int carry = 0;
        while(num2 != 0){
            // 按位异或：1^1=0 0^0=0 1^0=1 0^1=1
            sum = num1 ^ num2;
            // 按位与 ：1&1=1 0&0=0 1&0=0 0&1=0
            // 所以按位异或等价于不考虑进位的加法，按位与左移1位表示进位值。
            carry = (num1 & num2) << 1;
            num1 = sum;
            num2 = carry;
        }
        return num1;
    }
}
